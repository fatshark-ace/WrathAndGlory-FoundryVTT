"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const actor_js_1 = require("./actor.js");
const item_js_1 = require("./item.js");
const agent_js_1 = require("../sheet/agent.js");
const threat_js_1 = require("../sheet/threat.js");
const keyword_js_1 = require("../sheet/keyword.js");
const talent_js_1 = require("../sheet/talent.js");
const ability_js_1 = require("../sheet/ability.js");
const psychic_power_js_1 = require("../sheet/psychic-power.js");
const armour_js_1 = require("../sheet/armour.js");
const weapon_js_1 = require("../sheet/weapon.js");
const weapon_upgrade_js_1 = require("../sheet/weapon-upgrade.js");
const gear_js_1 = require("../sheet/gear.js");
const ascension_js_1 = require("../sheet/ascension.js");
const traumatic_injury_js_1 = require("../sheet/traumatic-injury.js");
const memorable_injury_js_1 = require("../sheet/memorable-injury.js");
const mutation_js_1 = require("../sheet/mutation.js");
const ammo_js_1 = require("../sheet/ammo.js");
const augmentic_js_1 = require("../sheet/augmentic.js");
const handlebars_js_1 = require("./handlebars.js");
const migration_js_1 = require("./migration.js");
const dialog_js_1 = require("./dialog.js");
const roll_js_1 = require("./roll.js");
Hooks.once("init", () => {
    CONFIG.Actor.documentClass = actor_js_1.WrathAndGloryActor;
    CONFIG.Item.documentClass = item_js_1.WrathAndGloryItem;
    game.wag = {
        prepareCommonRoll: dialog_js_1.prepareCommonRoll,
        prepareWeaponRoll: dialog_js_1.prepareWeaponRoll,
        prepareDamageRoll: dialog_js_1.prepareDamageRoll,
        preparePsychicRoll: dialog_js_1.preparePsychicRoll,
        commonRoll: roll_js_1.commonRoll,
        weaponRoll: roll_js_1.weaponRoll,
        psychicRoll: roll_js_1.psychicRoll,
        damageRoll: roll_js_1.damageRoll
    };
    CONFIG.Combat.initiative = { formula: "(@attributes.initiative.total)d6", decimals: 0 };
    Actors.unregisterSheet("core", ActorSheet);
    Actors.registerSheet("wrath-and-glory", agent_js_1.AgentSheet, { types: ["agent"], makeDefault: true });
    Actors.registerSheet("wrath-and-glory", threat_js_1.ThreatSheet, { types: ["threat"], makeDefault: true });
    Items.unregisterSheet("core", ItemSheet);
    Items.registerSheet("wrath-and-glory", keyword_js_1.KeywordSheet, { types: ["keyword"], makeDefault: true });
    Items.registerSheet("wrath-and-glory", talent_js_1.TalentSheet, { types: ["talent"], makeDefault: true });
    Items.registerSheet("wrath-and-glory", ability_js_1.AbilitySheet, { types: ["ability"], makeDefault: true });
    Items.registerSheet("wrath-and-glory", psychic_power_js_1.PsychicPowerSheet, { types: ["psychicPower"], makeDefault: true });
    Items.registerSheet("wrath-and-glory", armour_js_1.ArmourSheet, { types: ["armour"], makeDefault: true });
    Items.registerSheet("wrath-and-glory", weapon_js_1.WeaponSheet, { types: ["weapon"], makeDefault: true });
    Items.registerSheet("wrath-and-glory", weapon_upgrade_js_1.WeaponUpgradeSheet, { types: ["weaponUpgrade"], makeDefault: true });
    Items.registerSheet("wrath-and-glory", gear_js_1.GearSheet, { types: ["gear"], makeDefault: true });
    Items.registerSheet("wrath-and-glory", ascension_js_1.AscensionSheet, { types: ["ascension"], makeDefault: true });
    Items.registerSheet("wrath-and-glory", traumatic_injury_js_1.TraumaticInjurySheet, { types: ["traumaticInjury"], makeDefault: true });
    Items.registerSheet("wrath-and-glory", memorable_injury_js_1.MemorableInjurySheet, { types: ["memorableInjury"], makeDefault: true });
    Items.registerSheet("wrath-and-glory", mutation_js_1.MutationSheet, { types: ["mutation"], makeDefault: true });
    Items.registerSheet("wrath-and-glory", ammo_js_1.AmmoSheet, { types: ["ammo"], makeDefault: true });
    Items.registerSheet("wrath-and-glory", ammo_js_1.AmmoSheet, { types: ["ammo"], makeDefault: true });
    Items.registerSheet("wrath-and-glory", augmentic_js_1.AugmenticSheet, { types: ["augmentic"], makeDefault: true });
    handlebars_js_1.initializeHandlebars();
    game.settings.register("wrath-and-glory", "worldSchemaVersion", {
        name: "World Version",
        hint: "Used to automatically upgrade worlds data when the system is upgraded.",
        scope: "world",
        config: true,
        default: 0,
        type: Number,
    });
});
Hooks.once("ready", () => {
    migration_js_1.migrateWorld();
});
//# sourceMappingURL=data:application/json;base64,